name: Cache Poison Scanner

on:
  schedule:
    - cron: '0 */3 * * *'  # Run every 7 hours
  workflow_dispatch:
    inputs:
      target_url:
        description: 'Target URL to scan'
        required: false
        type: string
      enable_subdomain:
        description: 'Enable subdomain enumeration'
        required: false
        type: boolean
        default: false
      threads:
        description: 'Number of threads'
        required: false
        type: number
        default: 10
      timeout:
        description: 'Request timeout in seconds'
        required: false
        type: number
        default: 10
      output_file:
        description: 'Output file path'
        required: false
        type: string
        default: 'results.json'
      proxy_list:
        description: 'URL to proxy list'
        required: false
        type: string
      share_document:
        description: 'Share complete findings document to Telegram'
        required: false
        type: boolean
        default: false
      live_notifications:
        description: 'Enable live Telegram notifications during scan'
        required: false
        type: boolean
        default: true

jobs:
  scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests urllib3
        
        go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
        echo "${HOME}/go/bin" >> $GITHUB_PATH
        
        sudo apt-get update
        sudo apt-get install -y curl

    - name: Cache subfinder results
      uses: actions/cache@v3
      with:
        path: ~/.config/subfinder
        key: ${{ runner.os }}-subfinder-${{ hashFiles('**/subfinder-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-subfinder-
    
    - name: Run scanner
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        SILENT_MODE: "true"
        ENABLE_NOTIFICATIONS: ${{ inputs.live_notifications != false }}
      run: |
        SCAN_CMD="python poisonthecache.py"

        if [ "${{ github.event_name }}" = "schedule" ]; then
          SCAN_CMD="$SCAN_CMD --auto --sub"
        else
          if [ -n "${{ inputs.target_url }}" ]; then
            SCAN_CMD="$SCAN_CMD -u ${{ inputs.target_url }}"
          else
            SCAN_CMD="$SCAN_CMD --auto"
          fi
          
          if [ "${{ inputs.enable_subdomain }}" = "true" ]; then
            SCAN_CMD="$SCAN_CMD --sub"
          fi
        fi
        
        if [ -n "${{ inputs.threads }}" ]; then
          SCAN_CMD="$SCAN_CMD -t ${{ inputs.threads }}"
        fi
        
        if [ -n "${{ inputs.timeout }}" ]; then
          SCAN_CMD="$SCAN_CMD --timeout ${{ inputs.timeout }}"
        fi
        
        if [ -n "${{ inputs.proxy_list }}" ]; then
          SCAN_CMD="$SCAN_CMD --proxy-list ${{ inputs.proxy_list }}"
        fi
        
        if [ -n "${{ inputs.output_file }}" ]; then
          SCAN_CMD="$SCAN_CMD -o ${{ inputs.output_file }}"
        fi
        
        if [ "${{ inputs.live_notifications }}" = "false" ]; then
          SCAN_CMD="$SCAN_CMD --no-notify"
        fi
        
        echo "Running: $SCAN_CMD"
        $SCAN_CMD

    - name: Share complete findings
      if: inputs.share_document && success() && inputs.output_file
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        if [ -f "${{ inputs.output_file }}" ]; then
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
            -F "chat_id=${TELEGRAM_CHAT_ID}" \
            -F "document=@${{ inputs.output_file }}" \
            -F "caption=ðŸ“„ Complete Cache Poisoning Scan Results%0ATarget: ${{ inputs.target_url || 'Auto Mode' }}%0ATimestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        fi

    - name: Clean up
      if: always()
      run: |
        rm -f *.tmp
        rm -f ${{ inputs.output_file }}
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          rm -rf ~/.config/subfinder
        fi
