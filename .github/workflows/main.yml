name: Web Cache Poison Scanner

on:
  schedule:
    - cron: '0 */7 * * *'  # Run every 7 hours
  workflow_dispatch:  # Allow manual triggers
    inputs:
      target_url:
        description: 'Target URL to scan (optional)'
        required: false
        type: string

jobs:
  scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-telegram-bot urllib3
        
    - name: Install Subfinder
      run: |
        go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
        echo "${HOME}/go/bin" >> $GITHUB_PATH
        
    - name: Cache proxy list
      id: cache-proxies
      uses: actions/cache@v3
      with:
        path: proxies.txt
        key: ${{ runner.os }}-proxies-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-proxies-
          
    - name: Update proxy list
      if: steps.cache-proxies.outputs.cache-hit != 'true'
      run: |
        curl -s https://raw.githubusercontent.com/TheSpeedX/SOCKS-List/master/http.txt > proxies.txt
        
    - name: Run cache poison scanner
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        CMD="python poisonthecache.py --output scan_results.json --proxy-list file://$(HOME)/proxies.txt --threads 20 --timeout 15"
        
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.target_url }}" ]; then
          CMD="$CMD --url ${{ inputs.target_url }}"
          echo "ðŸŽ¯ Running scan on specified target: ${{ inputs.target_url }}"
        else
          echo "ðŸ”„ Running automatic scan using targets from bounty-targets-data"
        fi
        
        eval $CMD
        
    - name: Upload scan results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: scan-results
        path: |
          scan_results.json
        retention-days: 30
        
    - name: Cleanup
      if: always()
      run: |
        rm -f scan_results.json proxies.txt
